<h2>Service information: <?=string.upper(session.section or "")?></h2>
<?
local svc = session.section;
my.svcinfo = Rumble.serviceInfo(svc);
if ( session.section and session.credentials.admin ) then
	local svctrl = nil;
	if (my.svcinfo) then
		if (http.form.pause) then
			Rumble.suspendService(session.section);
			svctrl = session.section:upper() .. " suspended!";
		elseif (http.form.start) then
			if (my.svcinfo.enabled == 2) then
				Rumble.resumeService(svc);
				svctrl = session.section:upper() .. " resumed!";
			elseif (my.svcinfo.enabled == 0) then
				Rumble.startService(svc);
				svctrl = session.section:upper() .. " started!";
			else
				svctrl = session.section:upper() .. " is already running!";
			end
		elseif (http.form.stop) then
			Rumble.stopService(svc);
			svctrl = session.section:upper() .. " stopped!";
		end
	else
		svctrl = "No such service: " .. svc:upper();	
	end
	if (svctrl) then
		printf("<div class='notification'>Service notification:<br/>" .. svctrl .. "</div>");
	end
end
my.stuff = {moo = 1};
my.stuff.sent, my.stuff.recv, my.stuff.total =  math.comma(my.svcinfo.sent), math.comma(my.svcinfo.received),math.comma(my.svcinfo.sent + my.svcinfo.received);
my.stuff.jobs, my.stuff.workers, my.stuff.busy, my.stuff.idle, my.stuff.per = math.comma(my.svcinfo.sessions), math.comma(my.svcinfo.workers), math.comma(my.svcinfo.busy), math.comma(my.svcinfo.idle), my.svcinfo.sessions/my.svcinfo.workers;
my.stuff.rejected, my.stuff.accepted = math.comma(my.svcinfo.rejected or 0), math.comma(my.svcinfo.sessions - (my.svcinfo.rejected or 0));

?>
<table border="0" cellspacing="1" class="elements" width="700">
<tr><th colspan="2">Traffic</th><th colspan="2">Workers</th><th colspan="2">Sessions</tr>
<tr><td><b>Sessions:</b></td>
  <td align="right"> <?=my.stuff.jobs?> handled</td><td><strong>Busy workers:</strong></td><td align="right"><?=my.stuff.busy?> </td>
<td><strong>Session accepted:</strong></td>
<td align="right"><?=my.stuff.accepted?></td></tr>
<tr><td><b>Sent:</b></td><td align="right"> <?=my.stuff.sent?>  bytes</td><td><strong>Idle workers:</strong></td><td align="right"><?=my.stuff.idle?> </td>
<td><strong>Sessions rejected:</strong></td>
<td align="right"><?=my.stuff.rejected?></td></tr>
<tr><td><b>Received:</b></td><td align="right"> <?=my.stuff.recv?>  bytes</td><td><strong>Total workers:</strong></td><td align="right"><?=my.stuff.workers?> </td><td></td>
  <td align="right"></td></tr>
<tr ><td><b>Total:</b></td><td align="right"> <?=my.stuff.total?>  bytes</td>
<td><strong>Jobs per worker:</strong></td><td align="right"><?=my.stuff.per?> </td><td></td>
<td align="right"></td></tr>
</table>

<br />

<h3>Latest log entries:</h3>
<?

local svc = session.section;
local svclog = {};
local colors = {
	core = 282,
	smtp = 228,
	pop3 = 228,
	imap4 = 228,
	startup = 882,
	db = 828,
	module = 852,
	mailman = 284
};

local color = "993333";
for k,c in pairs(colors) do
	if (svc == k) then
		color = c;
		break;
	end
end

for i,entry in pairs(Rumble.getLog()) do
	local date, service, log = string.match(entry, "(%d+/%d+/%d+ %d+:%d+:%d+) %[([^%]]+)%]:%s+(.*)");
	if (svc == service) then
		log = log:gsub("<", "&lt;");
		log = log:gsub("(%d[%d%.]+)", "<span style='color: #996622;'>%1</span>");
		table.insert(svclog, "<div style='border: 1px dotted #522; margin: 3px; width: 700px;'>"..date.." <b style='color: #"..color..";'>"..svc..": </b> "..log.."</div>");
	end
end

if (#svclog > 0) then
	for k,v in pairs(svclog) do
		printf("%s", v);
	end
else 
	printf("No entries matching "..svc.."found in the latest system messages\n");
end
?>
